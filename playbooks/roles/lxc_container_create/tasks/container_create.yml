---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Obtain the Systems SSH-Key
  set_fact:
    lxc_container_ssh_key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
  when: >
    lxc_container_ssh_key is not defined
  delegate_to: "{{ physical_host }}"

- name: Check for lxc volume group
  shell: "(which vgs > /dev/null && vgs | grep -o '{{ lxc_container_vg_name }}') || false"
  register: vg_result
  failed_when: false
  changed_when: vg_result.rc != 0
  delegate_to: "{{ physical_host }}"
  when: lxc_container_backing_store == "lvm"
  tags:
    - lxc-container-vg-detect

- name: Set container backend "dir" if "lvm" specified but not available.
  set_fact:
     lxc_container_backing_store: dir
  when: lxc_container_backing_store == "lvm" and vg_result.rc != 0
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-vg-detect

# container_state defaults to started so doesn't need to be set to started
# for lxc_container_strategy == "create"
- name: set lxc_container_state stopped
  set_fact:
    container_state: stopped
    lxc_container_name: "{{ lxc_container_prototype_name }}"
  when: lxc_container_type == "prototype" and lxc_container_strategy == "clone"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-vg-detect

- name: set lxc_container_state clone
  set_fact:
    container_state: clone
  when: lxc_container_type == "production" and lxc_container_strategy == "clone"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-vg-detect

- name: Create container
  lxc_container:
    name: "{{ lxc_container_name|default(inventory_hostname) }}"
    clone_name: "{{inventory_hostname}}"
    clone_snapshot: yes
    container_log: "true"
    config: "{{ lxc_container_config }}"
    template: "{{ lxc_container_template }}"
    state: "{{ lxc_container_state }}"
    backing_store: "{{ lxc_container_backing_store }}"
    fs_size: "{{ lxc_container_fs_size }}"
    fs_type: "{{ lxc_container_fs_type }}"
    vg_name: "{{ lxc_container_vg_name }}"
    template_options: "--release {{ properties.container_release|default(lxc_container_release) }}"
    container_command: |
      mkdir -p ~/.ssh/
      if [ ! -f "~/.ssh/authorized_keys" ];then
        touch ~/.ssh/authorized_keys
      fi
      grep '{{ lxc_container_ssh_key }}' ~/.ssh/authorized_keys || echo '{{ lxc_container_ssh_key }}' | tee -a ~/.ssh/authorized_keys
      # Create internal directories
      mkdir -p /etc/network/interfaces.d
      mkdir -p /var/backup
      sed -i 's/PermitRootLogin.*/PermitRootLogin\ yes/g' /etc/ssh/sshd_config
      service ssh restart
      # Configure defined apt-repos
      rm /etc/apt/sources.list
      echo '# Do not edit this file. Add new sources to /etc/apt/sources.list.d/' | tee /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_main_apt_repo }} {{ lxc_container_release }} main restricted universe multiverse' | tee -a /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_main_apt_repo }} {{ lxc_container_release }}-updates main restricted universe multiverse' | tee -a /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_security_apt_repo }} {{ lxc_container_release }}-security main restricted universe multiverse' | tee -a /etc/apt/sources.list
      while timeout 120 apt-get update && apt-get -y install python2.7; [ $? = 124 ]; do
        sleep 5
      done
      rm /usr/bin/python
      ln -s /usr/bin/python2.7 /usr/bin/python
      echo -e '{{ lxc_container_default_interfaces }}' | tee /etc/network/interfaces
    container_config:
      - "lxc.aa_profile=lxc-openstack"
      - "lxc.mount.entry=/openstack/backup/{{ inventory_hostname }} var/backup none defaults,bind,rw 0 0"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-create

